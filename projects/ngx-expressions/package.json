{
    "name": "ngx-expressions",
    "version": "1.1.4",
    "repository": {
        "type": "git",
        "url": "https://github.com/scottphilip/ngx-expressions"
    },
    "homepage": "https://github.com/scottphilip/ngx-expressions",
    "author": {
        "name": "Scott Philip",
        "email": "git@scottphilip.de"
    },
    "description": "Angular control that allowing a quick and easy way to give intellisense to a field.  Works with Reactive forms and can be themed as well as used inside a Material Form Field (mat-form-field).  Under the hood, it uses Monaco Editor (monaco-editor).  The original use case it solved was helping users complete text templates by providing intellisense when inserting parameters which varied across multiple context into an interpolated string.  It has since been extended to work for both expressions and functions.",
    "keywords": [
        "angular",
        "expression",
        "expressions",
        "logic",
        "worker",
        "monaco",
        "monaco-editor",
        "intellisense",
        "mat-form-field",
        "material",
        "angular-material",
        "ngx",
        "ng2",
        "reactive",
        "formbuilder",
        "form-builder",
        "reactive-form",
        "interpolation",
        "typescript",
        "template",
        "format",
        "placeholder",
        "control",
        "ide",
        "vs-code",
        "vscode",
        "transpile",
        "transpiler",
        "eval"
    ],
    "license": "MIT License",
    "peerDependencies": {
        "@angular/common": "^9.0.0",
        "@angular/core": "^9.0.0",
        "@angular/material": "^9.0.0"
    },
    "dependencies": {
        "tslib": "^2.0.0"
    }
}
